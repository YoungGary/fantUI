@import '../config/config.scss';
@import '../common/variable.scss';
@import '../common/animation.scss';
@mixin declare($block) {
    $B: $namespace+'-'+$block !global;
    .#{$B} {
        @content;
    }
}

@mixin position($position:absolute,$dis:0){
  position: $position;
    left: $dis;
    top: $dis;
    margin: auto;
    right: $dis;
    bottom: $dis;
}

@mixin flexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin flexStart {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
// toast 
@mixin defineToastTypes($name) {
    @each $type in (success,warning,danger,primary) {
      .#{$name}#{$type} {
        @include toastStyle($type);
      }
    }
}
@mixin toastStyle($type:'primary') {
  $font-color: $--color-primary;
  $bg-color:$--color-toast-bg-primary;
  @if $type== 'success' {
    $font-color: $--color-success;
    $bg-color:$--color-toast-bg-success;
  }
  @if $type== 'warning' {
    $font-color: $--color-warning;
    $bg-color:$--color-toast-bg-warning;
  }
  @if $type== 'danger' {
    $font-color: $--color-danger;
    $bg-color:$--color-toast-bg-danger;
  }
  @if $type== 'primary' {
    $font-color: $--color-primary;
    $bg-color:$--color-toast-bg-primary;
  }
  color: $font-color;
  background-color: $bg-color;
  opacity: 0.8;
  border: 1px solid  $font-color;
  .#{$namespace}-toast__closeButton {
    width: 26px;
    height: 22px;
    @include flexCenter;
    cursor: pointer;
    position: absolute;
    top: 0;
    right: 0; 
    border-top-right-radius: 9px;
    border-bottom-left-radius: 9px;
    background-color:$font-color; 
  }
}

// button 
// large medium small 
//fa-buton--small
@mixin defineButtonSize($name) {
  @each $type in (small ,medium ,large) {
    .#{$name}#{$type} {
      @include difButtonSize($type);
    }
  }
}
// 每个
@mixin difButtonSize($type) {
  $font-size:$--size-medium;
  $padding:$--padding-large;
  @if $type== 'large' {
    $font-size: $--size-large;
    $padding: $--padding-large;
  }
  @if $type== 'medium' {
    $font-size: $--size-medium;
    $padding: $--padding-medium;
  }
  @if $type== 'small' {
    $font-size: $--size-small;
    $padding: $--padding-small;
  }
  font-size:$font-size;
  padding: $padding;
}
//success,warning,danger,primary
@mixin defineButtonType($name){
  @each $type in (success,warning,danger,primary){
    .#{$name}#{$type}{
      @include difButtonType($type);
    }
  }

}

@mixin difButtonType($type) {
  $color:white;
  $border-color:$--color-primary;
  $bg-color:$--color-primary;
  $hover-bg-color:$--color-primary;
  $bg-image:$--bg-primary-w-image;
  @if $type== 'success' {
    $bg-color:$--button-success-bg-color;
    $hover-bg-color:$--color-success;
    $bg-image:$--bg-success-w-image;
  }
  @if $type== 'warning' {
    $bg-color:$--button-warning-bg-color;
    $hover-bg-color:$--color-warning;
    $bg-image:$--bg-warning-w-image;
  }
  @if $type== 'danger' {
    $bg-color:$--button-danger-bg-color;
    $hover-bg-color:$--color-danger;
    $bg-image:$--bg-danger-w-image;
  }
  @if $type== 'primary' {
    $bg-color:$--button-primary-bg-color;
    $hover-bg-color:$--color-primary;
    $bg-image:$--bg-primary-w-image;
  }
  color: $color;
  /*不支持渐变色的浏览器就默认 primary颜色 否则就是渐变色*/
  background: $hover-bg-color;
  background: $bg-image 60px 60px no-repeat , $bg-color;
  background-position: bottom left;
  
  &.is-plain{
    @if $type== 'success' {
      $border-color: $--color-success;
      $color:$--color-success;
      $hover-bg-color:white;
      $bg-image:$--bg-success-image;
    }
    @if $type== 'warning' {
       $border-color: $--color-warning;
      $color:$--color-warning;
      $hover-bg-color:white;
      $bg-image:$--bg-warning-image;
    }
    @if $type== 'danger' {
      $border-color: $--color-danger;
      $color:$--color-danger;
      $hover-bg-color:white;
      $bg-image:$--bg-danger-image;
    }
    @if $type== 'primary' {
      $border-color: $--color-primary;
      $color:$--color-primary;
      $hover-bg-color:white;
      $bg-image:$--bg-primary-image;
    }
    color: $color;
    border: 1px solid $border-color;
    background: $hover-bg-color;
    background: $bg-image 60px 60px no-repeat , $hover-bg-color;
    background-position: bottom left;
  }
}


@mixin status($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}

.fa-shiny {
  &:after {
      content: '';
      position: absolute;
      animation: bling 1s infinite linear;
      background-image: linear-gradient(to right, rgb(232, 229, 229), white);
      left: 0;
      top: -20px;
      width: 5px;
      height: calc(100% + 30px);
      transform: rotate(-30deg);
  }
}